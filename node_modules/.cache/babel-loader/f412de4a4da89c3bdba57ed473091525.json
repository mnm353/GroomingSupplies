{"ast":null,"code":"var _jsxFileName = \"/Users/mandyrobinson/Documents/Code/Devmountain/GitHub/FullStackExampleECom/src/views/cart/cart.js\";\nimport React, { Component } from 'react';\nimport './cart.css';\nimport Header from '../../shared/header/header';\nimport { connect } from 'react-redux';\nimport * as Actions from '../../redux/action_creators/action_creator';\nimport axios from 'axios';\nimport CartItem from './components/cart_item/cart_item';\n\nclass Cart extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.removeFromCart = id => {\n      axios.delete(\"/api/cart/\".concat(id)).then(({\n        data\n      }) => {\n        if (data.success) {\n          this.props.setCart(data.cartItems);\n        } else if (!data.isLoggedIn) {\n          this.props.history.push('/');\n        } else {\n          alert('something blew up');\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/api/cart').then(({\n      data\n    }) => {\n      if (data.success) {\n        this.props.setCart(data.cartItems);\n      } else if (!data.isLoggedIn) {\n        this.props.history.push('/');\n      } else {\n        alert('something blew up');\n      }\n    });\n  }\n\n  render() {\n    const cartItems = this.props.cartItems.map(e => {\n      return React.createElement(CartItem, {\n        key: e.id,\n        removeFromCart: this.removeFromCart,\n        id: e.id,\n        image_url: e.image_url,\n        price: e.price,\n        name: e.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"cart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), cartItems);\n  }\n\n}\n\nexport default connect(state => state, Actions)(Cart);","map":{"version":3,"sources":["/Users/mandyrobinson/Documents/Code/Devmountain/GitHub/FullStackExampleECom/src/views/cart/cart.js"],"names":["React","Component","Header","connect","Actions","axios","CartItem","Cart","removeFromCart","id","delete","then","data","success","props","setCart","cartItems","isLoggedIn","history","push","alert","componentDidMount","get","render","map","e","image_url","price","name","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,4CAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kCAArB;;AAEA,MAAMC,IAAN,SAAmBN,SAAnB,CAA6B;AAAA;AAAA;;AAAA,SAc5BO,cAd4B,GAcVC,EAAD,IAAQ;AACxBJ,MAAAA,KAAK,CAACK,MAAN,qBAA0BD,EAA1B,GACCE,IADD,CACM,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAU;AACf,YAAIA,IAAI,CAACC,OAAT,EAAkB;AACjB,eAAKC,KAAL,CAAWC,OAAX,CAAmBH,IAAI,CAACI,SAAxB;AACA,SAFD,MAEO,IAAI,CAACJ,IAAI,CAACK,UAAV,EAAsB;AAC5B,eAAKH,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACA,SAFM,MAEA;AACNC,UAAAA,KAAK,CAAC,mBAAD,CAAL;AACA;AACD,OATD;AAUA,KAzB2B;AAAA;;AAE5BC,EAAAA,iBAAiB,GAAE;AAClBhB,IAAAA,KAAK,CAACiB,GAAN,CAAU,WAAV,EACCX,IADD,CACM,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAU;AACf,UAAIA,IAAI,CAACC,OAAT,EAAkB;AACjB,aAAKC,KAAL,CAAWC,OAAX,CAAmBH,IAAI,CAACI,SAAxB;AACA,OAFD,MAEO,IAAI,CAACJ,IAAI,CAACK,UAAV,EAAsB;AAC5B,aAAKH,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACA,OAFM,MAEA;AACNC,QAAAA,KAAK,CAAC,mBAAD,CAAL;AACA;AACD,KATD;AAUA;;AAcDG,EAAAA,MAAM,GAAG;AACR,UAAMP,SAAS,GAAG,KAAKF,KAAL,CAAWE,SAAX,CAAqBQ,GAArB,CAA0BC,CAAD,IAAK;AAC/C,aAAO,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,CAAC,CAAChB,EAAjB;AAAqB,QAAA,cAAc,EAAE,KAAKD,cAA1C;AAA0D,QAAA,EAAE,EAAEiB,CAAC,CAAChB,EAAhE;AAAoE,QAAA,SAAS,EAAEgB,CAAC,CAACC,SAAjF;AAA4F,QAAA,KAAK,EAAED,CAAC,CAACE,KAArG;AAA4G,QAAA,IAAI,EAAEF,CAAC,CAACG,IAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACA,KAFiB,CAAlB;AAGA,WACC;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEEZ,SAFF,CADD;AAMA;;AArC2B;;AAwC7B,eAAeb,OAAO,CAAC0B,KAAK,IAAIA,KAAV,EAAiBzB,OAAjB,CAAP,CAAiCG,IAAjC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport './cart.css';\nimport Header from '../../shared/header/header';\nimport { connect } from 'react-redux';\nimport * as Actions from '../../redux/action_creators/action_creator';\nimport axios from 'axios';\nimport CartItem from './components/cart_item/cart_item';\n\nclass Cart extends Component {\n\n\tcomponentDidMount(){\n\t\taxios.get('/api/cart')\n\t\t.then(({data})=>{\n\t\t\tif (data.success) {\n\t\t\t\tthis.props.setCart(data.cartItems);\n\t\t\t} else if (!data.isLoggedIn) {\n\t\t\t\tthis.props.history.push('/');\n\t\t\t} else {\n\t\t\t\talert('something blew up');\n\t\t\t}\n\t\t})\n\t}\n\tremoveFromCart = (id) => {\n\t\taxios.delete(`/api/cart/${id}`)\n\t\t.then(({data})=>{\n\t\t\tif (data.success) {\n\t\t\t\tthis.props.setCart(data.cartItems);\n\t\t\t} else if (!data.isLoggedIn) {\n\t\t\t\tthis.props.history.push('/');\n\t\t\t} else {\n\t\t\t\talert('something blew up');\n\t\t\t}\n\t\t})\n\t}\n\n\trender() {\n\t\tconst cartItems = this.props.cartItems.map((e)=>{\n\t\t\treturn <CartItem key={e.id} removeFromCart={this.removeFromCart} id={e.id} image_url={e.image_url} price={e.price} name={e.name} />\n\t\t})\n\t\treturn (\n\t\t\t<div className=\"cart\">\n\t\t\t\t<Header />\n\t\t\t\t{cartItems}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect(state => state, Actions)(Cart) ;\n"]},"metadata":{},"sourceType":"module"}