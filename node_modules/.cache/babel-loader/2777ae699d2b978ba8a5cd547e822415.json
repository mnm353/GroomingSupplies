{"ast":null,"code":"import axios from 'axios';\nexport default {\n  get: (url, props) => {\n    return new Promise((resolve, reject) => {\n      axios.get(url).then(({\n        data\n      }) => {\n        if (data.success) {\n          resolve(data);\n        } else if (!data.isLoggedIn) {\n          props.history.push('/');\n        } else {\n          alert('something blew up');\n        }\n      });\n    });\n  },\n  post: (url, props, data) => {\n    debugger;\n    return new Promise((resolve, reject) => {\n      axios.post(url, data).then(({\n        data\n      }) => {\n        if (data.success) {\n          resolve(data);\n        } else if (!data.isLoggedIn) {\n          props.history.push('/');\n        } else {\n          alert('something blew up');\n        }\n      });\n    });\n  },\n  put: (url, props, data) => {\n    return new Promise((resolve, reject) => {\n      axios.put(url, data).then(({\n        data\n      }) => {\n        if (data.success) {\n          resolve(data);\n        } else if (!data.isLoggedIn) {\n          props.history.push('/');\n        } else {\n          alert('something blew up');\n        }\n      });\n    });\n  },\n  delete: (url, props) => {\n    return new Promise((resolve, reject) => {\n      axios.delete(url).then(({\n        data\n      }) => {\n        if (data.success) {\n          resolve(data);\n        } else if (!data.isLoggedIn) {\n          props.history.push('/');\n        } else {\n          alert('something blew up');\n        }\n      });\n    });\n  }\n};","map":{"version":3,"sources":["/Users/mandyrobinson/Documents/Code/Devmountain/GitHub/FullStackExampleECom/src/shared/services/http_request.js"],"names":["axios","get","url","props","Promise","resolve","reject","then","data","success","isLoggedIn","history","push","alert","post","put","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAe;AACXC,EAAAA,GAAG,EAAE,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACjB,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAmB;AACnCN,MAAAA,KAAK,CAACC,GAAN,CAAUC,GAAV,EAAeK,IAAf,CAAoB,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAc;AAC7B,YAAIA,IAAI,CAACC,OAAT,EAAkB;AACdJ,UAAAA,OAAO,CAACG,IAAD,CAAP;AACH,SAFD,MAEO,IAAI,CAACA,IAAI,CAACE,UAAV,EAAsB;AACzBP,UAAAA,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACH,SAFM,MAEA;AACHC,UAAAA,KAAK,CAAC,mBAAD,CAAL;AACH;AACJ,OARF;AASF,KAVM,CAAP;AAWH,GAbU;AAcXC,EAAAA,IAAI,EAAE,CAACZ,GAAD,EAAMC,KAAN,EAAaK,IAAb,KAAsB;AACxB;AACA,WAAO,IAAIJ,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAmB;AAClCN,MAAAA,KAAK,CAACc,IAAN,CAAWZ,GAAX,EAAgBM,IAAhB,EAAsBD,IAAtB,CAA2B,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAc;AACpC,YAAIA,IAAI,CAACC,OAAT,EAAkB;AACdJ,UAAAA,OAAO,CAACG,IAAD,CAAP;AACH,SAFD,MAEO,IAAI,CAACA,IAAI,CAACE,UAAV,EAAsB;AACzBP,UAAAA,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACH,SAFM,MAEA;AACHC,UAAAA,KAAK,CAAC,mBAAD,CAAL;AACH;AACJ,OARF;AASF,KAVK,CAAP;AAWH,GA3BU;AA4BXE,EAAAA,GAAG,EAAE,CAACb,GAAD,EAAMC,KAAN,EAAaK,IAAb,KAAsB;AACvB,WAAO,IAAIJ,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAmB;AAClCN,MAAAA,KAAK,CAACe,GAAN,CAAUb,GAAV,EAAeM,IAAf,EAAqBD,IAArB,CAA0B,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAc;AACnC,YAAIA,IAAI,CAACC,OAAT,EAAkB;AACdJ,UAAAA,OAAO,CAACG,IAAD,CAAP;AACH,SAFD,MAEO,IAAI,CAACA,IAAI,CAACE,UAAV,EAAsB;AACzBP,UAAAA,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACH,SAFM,MAEA;AACHC,UAAAA,KAAK,CAAC,mBAAD,CAAL;AACH;AACJ,OARF;AASF,KAVK,CAAP;AAWH,GAxCU;AAyCXG,EAAAA,MAAM,EAAE,CAACd,GAAD,EAAMC,KAAN,KAAgB;AACpB,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAmB;AAClCN,MAAAA,KAAK,CAACgB,MAAN,CAAad,GAAb,EAAkBK,IAAlB,CAAuB,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAc;AAChC,YAAIA,IAAI,CAACC,OAAT,EAAkB;AACdJ,UAAAA,OAAO,CAACG,IAAD,CAAP;AACH,SAFD,MAEO,IAAI,CAACA,IAAI,CAACE,UAAV,EAAsB;AACzBP,UAAAA,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACH,SAFM,MAEA;AACHC,UAAAA,KAAK,CAAC,mBAAD,CAAL;AACH;AACJ,OARF;AASF,KAVK,CAAP;AAWH;AArDU,CAAf","sourcesContent":["import axios from 'axios';\nexport default {\n    get: (url, props) => {\n        return new Promise((resolve, reject)=>{\n           axios.get(url).then(({ data }) => {\n                if (data.success) {\n                    resolve(data)\n                } else if (!data.isLoggedIn) {\n                    props.history.push('/');\n                } else {\n                    alert('something blew up');\n                }\n            })\n        })\n    },\n    post: (url, props, data) => {\n        debugger\n        return new Promise((resolve, reject)=>{\n            axios.post(url, data).then(({ data }) => {\n                 if (data.success) {\n                     resolve(data)\n                 } else if (!data.isLoggedIn) {\n                     props.history.push('/');\n                 } else {\n                     alert('something blew up');\n                 }\n             })\n         })\n    },\n    put: (url, props, data) => {\n        return new Promise((resolve, reject)=>{\n            axios.put(url, data).then(({ data }) => {\n                 if (data.success) {\n                     resolve(data)\n                 } else if (!data.isLoggedIn) {\n                     props.history.push('/');\n                 } else {\n                     alert('something blew up');\n                 }\n             })\n         })\n    },\n    delete: (url, props) => {\n        return new Promise((resolve, reject)=>{\n            axios.delete(url).then(({ data }) => {\n                 if (data.success) {\n                     resolve(data)\n                 } else if (!data.isLoggedIn) {\n                     props.history.push('/');\n                 } else {\n                     alert('something blew up');\n                 }\n             })\n         })\n    },\n}"]},"metadata":{},"sourceType":"module"}